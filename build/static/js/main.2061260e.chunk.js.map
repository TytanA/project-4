{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/Header/Header.js","components/AddPost/AddPost.jsx","components/DeleteButton/DeleteButton.jsx","components/PostCard/PostCard.jsx","components/PostGallery/PostGallery.jsx","utils/postApi.js","pages/Feed/Feed.jsx","pages/RecipePage/RecipePage.jsx","components/Profile/Profile.jsx","pages/Profile/Profile.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","fetch","method","body","then","res","ok","json","response","console","log","Error","err","tokenService","logout","login","creds","headers","Headers","stringify","getUser","getProfile","username","SignUpPage","useState","message","passwordError","setError","email","password","passwordConf","state","setState","selectedFile","setSelectedFile","handleChange","e","target","name","value","a","preventDefault","key","formData","FormData","append","userService","handleSignUpOrLogin","Navigate","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","size","onSubmit","Segment","stacked","Input","placeholder","onChange","required","icon","iconPosition","type","Field","files","Button","fluid","Message","to","LoginPage","navigate","useNavigate","PageHeader","loggedUser","handleLogout","clearing","floated","Icon","onClick","Image","src","photoUrl","avatar","AddPost","title","ingredients","directions","newPost","setNewPost","handleAddPost","Deletebutton","handleDeletePost","id","PostCard","link","Card","wrapped","ui","Content","Meta","Description","extra","PostGallery","posts","Group","map","post","_id","create","deletePost","getAll","getPost","Feed","setPosts","postsAPI","data","getPosts","useEffect","centered","Row","RecipePage","setPost","useParams","postApis","Profile","columns","vertical","ProfilePage","profileUser","setProfileUser","useCallback","App","setUser","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2061260e.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","import tokenService from './tokenService';\n\n\n\nconst BASE_URL = '/api/users/';\n\n\nfunction getProfile(username){\n  return fetch(BASE_URL + username, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken(),\n  }\n}).then(res => {\n  if(res.ok) return res.json();\n  throw new Error('Error from getProfile')\n})\n}\n\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    \n    // Writing your error handling like this allows you to throw the error response \n    // to the catch block where signup occurs,  \n\n//     res.status(400).json({ err: \"Something went wrong\" }); notice err, and response.err match\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\n\nexport default {\n  signup, \n  logout,\n  login,\n  getUser,\n  getProfile\n}","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\n\nimport userService from \"../../utils/userService\";\nimport { Navigate, Link } from \"react-router-dom\";\nimport { PinpointEmail } from \"aws-sdk\";\n\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\n\nexport default function SignUpPage(props) {\n  const [error, setError] = useState({\n    message: '',\n    passwordError: false\n  });\n  const [state, setState] = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConf: ''\n  })\n  const [selectedFile, setSelectedFile] = useState('');\n\n\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (state.password !== state.passwordConf) return setError({ message: 'Passwords Must Match!', passwordError: true });\n    const formData = new FormData();\n    formData.append('photo', selectedFile);\n    for (let key in state) {\n      formData.append(key, state[key])\n    }\n    try {\n      await userService.signup(formData);\n      props.handleSignUpOrLogin();\n      Navigate('/');\n    } catch (err) {\n      console.log(err)\n      setError({ message: err.message })\n    }\n  }\n\n  function handleFileInput(e) {\n    console.log(e.target.files, '<-this is the uploading file')\n    setSelectedFile(e.target.files[0]);\n  }\n\n\n  return (\n    <>\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='teal' textAlign='center'>\n          Signup for your account\n        </Header>\n        <Form size='large' onSubmit={handleSubmit}>\n          <Segment stacked>\n            <Form.Input\n              name='username'\n              placeholder='username'\n              value={state.username}\n              onChange={handleChange}\n              required />\n            <Form.Input\n              name='email'\n              placeholder='email'\n              value={state.email}\n              onChange={handleChange}\n              required />\n            <Form.Input\n              icon='lock'\n              iconPosition='left'\n              name='password'\n              placeholder='password'\n              value={state.password}\n              onChange={handleChange}\n              type='password'\n              required />\n            <Form.Input\n              icon='lock'\n              iconPosition='left'\n              name='passwordConf'\n              placeholder='Confirm Password'\n              value={state.passwordConf}\n              onChange={handleChange}\n              type='password'\n              required />\n            <Form.Field>\n              <label>Upload a Profile Picture</label>\n              <Form.Input\n                type='file'\n                name='photo'\n                placeholder='upload image'\n                onChange={handleFileInput}\n              />\n            </Form.Field>\n            <Button type='submit' color='teal' fluid size='large'>\n              Signup\n            </Button>\n          </Segment>\n          {error.message ? <ErrorMessage error={error.message} /> : null}\n        </Form>\n        <Message>\n          Already a member? <Link to='/login'>Login</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport \"./LoginPage.css\";\n\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState('');\n  const [state, setState] = useState({\n    email: '',\n    password: ''\n  })\n\n  const navigate = useNavigate()\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    \n    try{\n      await userService.login(state);\n      props.handleSignUpOrLogin();\n      navigate('/')\n    }catch(err){\n      console.log(err)\n      setError(err.message)\n    }\n\n\n  }\n  return (\n    <Grid onSubmit={handleSubmit} textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='teal' textAlign='center'>\n        </Header>\n        <Form size='large'>\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon='user'\n              name='email'\n              iconPosition='left'\n              placeholder='E-mail address'\n              onChange={handleChange} \n              required/>\n            <Form.Input\n              fluid\n              icon='lock'\n              iconPosition='left'\n              placeholder='Password'\n              type='password'\n              name='password'\n              onChange={handleChange}\n              required/>\n\n            <Button\n              type='submit'\n              color='teal'\n              fluid size='large'>\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          New to us? <Link to='/signup'>Sign Up</Link>\n        </Message>\n        {error ? <ErrorMessage  error={error} /> : null}\n      </Grid.Column>\n    </Grid>\n\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Header, Segment, Image, Icon } from \"semantic-ui-react\";\n\nexport default function PageHeader({ loggedUser, handleLogout }) {\n  console.log(loggedUser, \"loggedUser in header\");\n  return (\n    <Segment clearing>\n      <Header as=\"h2\" floated=\"right\">\n        <Link to=\"/\">\n          <Icon name=\"home\"></Icon>\n        </Link>\n        <Link to=\"\" onClick={handleLogout}>\n          Logout\n        </Link>\n      </Header>\n      <Header as=\"h2\" floated=\"left\">\n        <Link to={`/${loggedUser?.username}`}>\n          <Image\n            src={\n                loggedUser?.photoUrl\n                ? loggedUser?.photoUrl\n                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n            }\n            avatar\n          ></Image>\n        </Link>\n      </Header>\n    </Segment>\n  );\n}","import React, { useState } from \"react\";\nimport { Button, Form, Segment } from 'semantic-ui-react'\n\nexport default function AddPost(props) {\n    const [newPost, setNewPost] = useState({\n        title: '',\n        ingredients: '',\n        directions: ''\n    })\n\n    const [selectedFile, setSelectedFile] = useState('')\n\n    function handleFileInput(e) {\n        setSelectedFile(e.target.files[0])\n    }\n\n    function handleChange(e) {\n        setNewPost({\n            ...newPost,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log('you are pressing the button')\n        const formData = new FormData();\n        formData.append('photo', selectedFile)\n        for (let key in newPost) {\n            formData.append(key, newPost[key])\n        }\n        props.handleAddPost(formData);\n    }\n\n    return (\n        <Segment>\n            <Form onSubmit={handleSubmit}>\n                <Form.Input\n                    className=\"form-control\"\n                    name=\"title\"\n                    value={newPost.title}\n                    placeholder=\"What do you call this Disaster?\"\n                    onChange={handleChange}\n                    required\n                />\n                <Form.Input\n                    className=\"form-control\"\n                    name=\"ingredients\"\n                    value={newPost.ingredients}\n                    placeholder=\"What are the ingredients and amounts?\"\n                    onChange={handleChange}\n                    required\n                />\n                <Form.Input\n                    className=\"form-control\"\n                    name=\"directions\"\n                    value={newPost.directions}\n                    placeholder=\"How do you make this disaster?\"\n                    onChange={handleChange}\n                    required\n                />\n                <Form.Field>\n                    <Form.Input\n                        type=\"file\"\n                        name=\"photo\"\n                        placeholder=\"upload image\"\n                        onChange={handleFileInput}\n                    />\n                </Form.Field>\n                <Button type=\"submit\" className=\"btn\">\n                    Add Disaster\n                </Button>\n            </Form>\n        </Segment>\n    );\n\n\n}","\nimport React from 'react'\nimport { Button } from 'semantic-ui-react'\n\nexport default function Deletebutton({ handleDeletePost, id }){\n\n    function handleClick(e){\n        e.preventDefault();\n        handleDeletePost(id);\n    } \n\n    return(\n    \n        <Button onClick={handleClick} className=\"btn\">\n            Delete\n        </Button>\n    \n    )\n}","import React from 'react'\nimport DeleteButton from '../../components/DeleteButton/DeleteButton'\nimport { Link } from 'react-router-dom'\nimport { Card, Image } from 'semantic-ui-react'\n\n\n\nexport default function PostCard({ link, title, photoUrl, loggedUser, username, id, handleDeletePost }) {\n\n  console.log(username)\n  console.log(loggedUser.username)\n\n  return(\n  <Card key={id}>\n    <Image src={photoUrl} wrapped ui={false} />\n    <Card.Content>\n       <Link to={`/posts/${link}`} > \n      <Card.Header>{title}</Card.Header>\n      </Link>\n      <Card.Meta>\n      </Card.Meta>\n      <Card.Description>\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n    {loggedUser?.username === username\n                ? <DeleteButton id={id} handleDeletePost={handleDeletePost}/>\n                : ''\n            }\n    </Card.Content>\n  </Card>\n  )\n}","import React from 'react';\nimport { Card } from 'semantic-ui-react';\n\nimport PostCard from '../../components/PostCard/PostCard'\n\n\nexport default function PostGallery({posts, loggedUser, handleDeletePost}){\nreturn (\n    <Card.Group>\n    {posts.map((post) => {\n        return (\n        <PostCard \n        post={post}\n        id={post._id}\n        title={post.title}\n        photoUrl={post.photoUrl}\n        link={post._id}\n        loggedUser={loggedUser}\n        username={post.user.username}\n        handleDeletePost={handleDeletePost}\n        />\n    )}\n\n    )}\n    </Card.Group>\n)}","import tokenService from \"./tokenService\";\n\nconst BASE_URL = '/api/posts';\n\nexport function create(post) {\n    return fetch(BASE_URL, {\n        method: 'POST',\n        body: post,\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then((res) => {\n        if (res.ok) return res.json();\n        return res.json().then(response => {\n            throw new Error(response.err)\n        })\n    });\n}\n\nexport function deletePost(id){\n    return fetch(`${BASE_URL}/${id}`, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n    }})\n}\n\nexport function getAll() {\n    return fetch(BASE_URL, {\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then((res) => {\n        if(res.ok){\n        console.log( res )\n        return res.json();\n\n        }\n        throw new Error(res.err)\n    })\n    }\n\n    export function getPost(id) {\n        console.log('getPost')\n        return fetch(BASE_URL, + id, {\n            headers: {\n                'Authorization': 'Bearer ' + tokenService.getToken()\n            }\n        }).then(res => {\n\n            if(res.ok) return res.json();\n            throw new Error('error from getPost request')\n        })\n    }","import React, { useState, useEffect } from 'react';\n\nimport PageHeader from '../../components/Header/Header';\nimport AddPost from '../../components/AddPost/AddPost'\nimport PostGallery from '../../components/PostGallery/PostGallery'\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\n\nimport { Grid } from 'semantic-ui-react'\n\nimport * as postsAPI from '../../utils/postApi'\n\nexport default function Feed({ loggedUser, handleLogout }) {\n    const [posts, setPosts] = useState([]);\n    const [error, setError] = useState('');\n\n\n    async function handleAddPost(post) {\n\n        try {\n            const response = await postsAPI.create(post)\n            setPosts([response.data, ...posts]);\n            getPosts()\n        } catch (err) {\n            setError('Error creating post, please try again')\n        }\n    }\n\n    async function getPosts() {\n        try {\n            const response = await postsAPI.getAll();\n            console.log(response, \" data\");\n            setPosts([...response.data]);\n        } catch (err) {\n            console.log(err.message, \" this is the error\");\n        }\n    }\n\n    useEffect(() => {\n\n\n        getPosts();\n        console.log(\"this is the useEffect firing\")\n    }, [])\n\n    async function handleDeletePost(id) {\n        try {\n            const response = await postsAPI.deletePost(id);\n            console.log(response, 'deleted post')\n            getPosts()\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    if (error) {\n        return (\n            <>\n                <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n                <ErrorMessage error={error} />\n            </>\n        )\n    }\n\n    return (\n        <Grid centered>\n            <Grid.Row>\n                <Grid.Column>\n                    <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column>\n                    <AddPost handleAddPost={handleAddPost} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <PostGallery handleDeletePost={handleDeletePost} posts={posts} loggedUser={loggedUser} />\n                </Grid.Column>\n            </Grid.Row>\n\n\n\n\n\n\n\n        </Grid>\n    )\n\n\n}","import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport PageHeader from '../../components/Header/Header';\n\nimport * as postApis from '../../utils/postApi'\n\n\n\nexport default function RecipePage({ loggedUser, handleLogout }) {\n    const [post, setPost] = useState({})\n\n    const { id } = useParams();\n    console.log(id)\n\n\n\n    useEffect(() => {\n\n        async function getPost(id) {\n            try {\n                const response = await postApis.getPost(id)\n                setPost(response)\n            } catch (err) {\n                console.log(err)\n            }\n    \n        }\n\n        getPost()\n    }, [id])\n\n    return (\n        <Grid>\n            <Grid.Row>\n                <Grid.Column>\n                    <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column>\n                    {post.title}\n                </Grid.Column>\n            </Grid.Row>\n\n\n        </Grid>\n    )\n}\n","import { Image, Grid, Segment } from \"semantic-ui-react\";\n\nexport default function Profile({ user }) {\n  return (\n    <Grid textAlign=\"center\" columns={2}>\n      <Grid.Row>\n        <Grid.Column>\n          <Image\n            src={`${\n              user.photoUrl\n                ? user.photoUrl\n                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n            } `}\n            avatar\n            size=\"small\"\n          />\n        </Grid.Column>\n        <Grid.Column textAlign=\"left\" style={{ maxWidth: 450 }}>\n          <Segment vertical>\n            <h1>{user.username}</h1>\n          </Segment>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { Grid } from 'semantic-ui-react'\nimport PostGallery from '../../components/PostGallery/PostGallery'\nimport PageHeader from '../../components/Header/Header';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport Profile from '../../components/Profile/Profile'\n\nimport userService from '../../utils/userService'\nimport * as postsAPI from '../../utils/postApi';\nimport { useParams } from 'react-router-dom'\n\nexport default function ProfilePage({ loggedUser, handleLogout }) {\n    const [posts, setPosts] = useState([]);\n    const [profileUser, setProfileUser] = useState({});\n    const [error, setError] = useState('')\n\n    const { username } = useParams();\n    console.log(username)\n\n    const getProfile = useCallback(async () => {\n        try {\n            const response = await userService.getProfile(username)\n\n            setProfileUser(response.data.user);\n            setPosts(response.data.posts);\n\n        } catch (err) {\n\n        }\n    }, [username]);\n\n    useEffect(() => {\n        console.log('profile page use effect')\n        getProfile();\n    }, [username, getProfile])\n\n\n    async function handleDeletePost(id) {\n        try {\n            const response = await postsAPI.deletePost(id);\n            console.log(response, 'deleted post')\n            getProfile();\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    if (error) {\n        return (\n            <>\n                <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n                <ErrorMessage error={error} />\n            </>\n        )\n    }\n    return (\n        <Grid>\n            <Grid.Row>\n                <Grid.Column>\n                    <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n                <Grid.Column>\n                    <Profile user={profileUser} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row centered>\n                <Grid.Column style={{ maxWidth: 750 }}>\n                    <PostGallery\n                        posts={posts}\n                        loggedUser={loggedUser}\n                        handleDeletePost={handleDeletePost}\n                    />\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n\n\n\n\n\n\n}\n","import React, { useState } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport userService from \"../../utils/userService\";\nimport FeedPage from '../Feed/Feed';\nimport RecipePage from \"../RecipePage/RecipePage\";\nimport ProfilePage from \"../Profile/Profile\";\n\nfunction App() {\n  const [user, setUser] = useState(userService.getUser()); // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like\n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser(null);\n  }\n\n  if (user) {\n    return (\n      <Routes>\n          <Route path=\"/:username\" element={<ProfilePage loggedUser={user} handleLogout={handleLogout} />} />\n        <Route path=\"/\" element={<FeedPage loggedUser={user} handleLogout={handleLogout} />} />\n        <Route path='/posts/:id' element={<RecipePage loggedUser={user} handleLogout={handleLogout}/>} />\n        <Route\n          path=\"/login\"\n          element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/signup\"\n          element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n      </Routes>\n    );\n  }\n\n  return (\n    <Routes>\n      <Route\n        path=\"/login\"\n        element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route\n        path=\"/signup\"\n        element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route path=\"/*\" element={<Navigate to=\"/login\" />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}